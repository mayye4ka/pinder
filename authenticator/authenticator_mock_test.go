// Code generated by MockGen. DO NOT EDIT.
// Source: authenticator/authenticator.go
//
// Generated by this command:
//
//	mockgen -source authenticator/authenticator.go -destination authenticator/authenticator_mock_test.go -package authenticator
//

// Package authenticator is a generated GoMock package.
package authenticator

import (
	reflect "reflect"

	models "github.com/mayye4ka/pinder/models"
	gomock "go.uber.org/mock/gomock"
)

// MockRepository is a mock of Repository interface.
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryMockRecorder
}

// MockRepositoryMockRecorder is the mock recorder for MockRepository.
type MockRepositoryMockRecorder struct {
	mock *MockRepository
}

// NewMockRepository creates a new mock instance.
func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &MockRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepository) EXPECT() *MockRepositoryMockRecorder {
	return m.recorder
}

// CreateUser mocks base method.
func (m *MockRepository) CreateUser(phoneNumber, passHash string) (models.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUser", phoneNumber, passHash)
	ret0, _ := ret[0].(models.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateUser indicates an expected call of CreateUser.
func (mr *MockRepositoryMockRecorder) CreateUser(phoneNumber, passHash any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUser", reflect.TypeOf((*MockRepository)(nil).CreateUser), phoneNumber, passHash)
}

// GetUserByCreds mocks base method.
func (m *MockRepository) GetUserByCreds(phoneNumber, passHash string) (models.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserByCreds", phoneNumber, passHash)
	ret0, _ := ret[0].(models.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserByCreds indicates an expected call of GetUserByCreds.
func (mr *MockRepositoryMockRecorder) GetUserByCreds(phoneNumber, passHash any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserByCreds", reflect.TypeOf((*MockRepository)(nil).GetUserByCreds), phoneNumber, passHash)
}
